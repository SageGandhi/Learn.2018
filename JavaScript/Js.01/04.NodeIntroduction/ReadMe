Developed By Ryan Dahl[Check Out Original Presentation In JsConf.Eu].
NodeJs Building Blocks:libuv[Multi-Platform C Library That Provides Support For Asynchronous Io Based On Event Loops],V8[Google JavaScript Engine],[Custom Js/C++ Code].
Use Nvm[Node Version Manager:https://github.com/creationix/nvm]:Run Linux SubSystem.Do Command As Mentioned.

curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
export NVM_DIR="$HOME/.nvm" # Exporting To Environment Variable
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This Loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This Loads nvm Bash Completion
command -v nvm #Verify If Nvm Installed Correctly
nvm install node # Install Latest Node Similarly nvm install 8.0.0
nvm use node # Use Latest Node Version nvm use 8.0.0
nvm install --lts # Install Node Version LongTerm Support
nvm use --lts # Use Node Version LongTerm Support
nvm alias default v8.11.1 #Set The Default Node Version To Be Used
To Search Nodejs Package Use Aptitude[If Command Not Found For Kali Use sudo apt-get install aptitude].

Use https://ide.c9.io/ For Development.Non-Blocking Event Driven Approach Using Event Loop[By Philip Roberts].Event Based Non-Blocking Asynchronous Code Use CallBack Function,EventEmitter.Function Definition[Input Parameter,CallBack Function[Last Parameter]].CallBack Function Definition[Error,Success/Output].01.Example.js Illustrates Event Loop Understanding,Create Basic Http Server,CallBack.

Require Function Loads A Module & Assign In A Variable To Be Used By Application.Naming Convention:Exports Set Of Variable Follows Camel Case/If Module Need To Be Instantiated InitCap CamelCase.Built In Module[fs/http/crypto/os],Each JavaScript File Is A Module[./ Or ../ Is Required,module.exports Define Exported Functionality Of A Module],Npm Modules[npm install <ModuleName> Install This In node_modules Folder,To Use Node Module From Cmd Use --global Flag When Installing Via npm install --global <ModuleName>].Learn About Package.json[https://docs.npmjs.com/files/package.json].

Non-Blocking Does Not Always Means CallBack.CallBack Example[1 Request/1 Reply/Not Invokes Until All Items Are Returned/All Or Nothing Proposition[If Error Occured For Whole Result,Error Param  Will Be There]].Event Emitter Example[Publish/Subscribe,1 Request,Multiple Reply/Act On Result As They Arrive,Partial Result May Returned Before Error].Publisher[emitter.emit(event,[args])]->Subscriber[emitter.on(event,listener)].Event Can Be Any String[Item/Rows/Done/Error].Common Pattern:Either Returning Emitter As A Value From A Function Call/Object Extending EventEmitter.

Stream Extending EventEmitter For Data Flow[Network Traffic/Io].ReadableStream/WritableStream/Both.ReadableStream Can Be Piped To WritableStream.All BackPressure Like Producer[Reader] Is Not Producing Data,Consumer[Writer] Will Wait Handled By Node.ReadableStream[readable[boolean]/Events[data/end/error/close]/Function[pause/resume/destroy/pipe]].WritableStream[writable[boolean]/Events[drain/error/close/pipe]/Function[write/end/destroy/destroySoon]].
When Invoke The Pipe Function On ReadableStream,We Pass As A Parameter The WritableStream We Want To Pipe To.
This In Turn Emits The pipe Event On WritableStream.Pipe Function Under The Hood Do Lots Of Work[Begins Orchestration Of Events & Function Between Two Streams].
    1.When Data Arrives In ReadableStream,data Event Is Emitted & write Function In WritableStream Is Invoked With This Data.
    2.At Some Point When Write Function Returns False Value[No More Data To Be Written,Unable To Write Any More Data],pause Function Of The ReadableStream Is Called To Stop The Flow Of Data.
    3.When WritableStream Is Ready To Receive More Data,The Drain Event Is Emitted & resume Function On The ReadableStream Is Invoked.
    4.Once The ReadableStream Is Finished,The end Event Is Emitted & The End Function On The WritableStream Is Invoked.
    
Local System Access:Node Process Object/FileSystem/Os Module/Buffers.
Http Module Does Not Follow Redirects Automatically But Request Module Does[https://www.pluralsight.com/ Send Redirect/Status Code 304].For Ssl We Need Https Module.__dirname Is The Directory That The Current Script Is Running.

Assert Module Provides equal(==)/strictEqual(===)/deepEqual.Mocha Run Test In Sync.Hook Exist before/after/beforeEach/afterEach.Should.js Bdd Style Support.Node Applicatiion Will Not Handle Cpu Intensive Task,Impact The Event Loop=>Solution Is Child Process.Long Non-Deterministic Time Child Process Via Spawn[Exit/Close Event]/Short Running Child Process Within Deterministic TimeFrame Exec/ExecFile[File Execute]/Fork[Send/Message Event]

