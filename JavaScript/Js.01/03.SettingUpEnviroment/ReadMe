Editor To Consider: FrontEnd:Atom/WebStorm/Bracket/VisualStudioCode/BackEnd:VisualStudio/Eclipse/NetBeans

EditorConfig:Goto http://editorconfig.org/. .editorconfig File Miust Be Present At The Root Of Project[root=true].Editor Will Have PlugIns That Will Look For .editorconfig File.Download Plugin For VisualStudioCode[https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig].

Package Management:Bower/Npm/JavaScriptPackageManager[Jspm]/Jam/Volo.Install Node[https://nodejs.org/en/].Use Nvm[Node Version Manager] To Manage Multiple Version Of Node.Added .gitignore At The Root Of This Project.Once Package.json Is Defined Use [npm install].Package Security Scanning Done Via Retire.js/Node Security Platform[npm install --global nsp  & Do nsp check].For Project Name Use javascript~development~environment~2018 As This Will Match With /^(?:@[a-z0-9-~][a-z0-9-._~]*/)?[a-z0-9-~][a-z0-9-._~]*$/ Regular Expression[https://regexr.com/].To  Clean node_modules Directory,Use Remove-Item -Recurse .\node_modules\ In PowerShell[rm -r .\node_modules\ In Command Prompt].

Development WebServers:Http-Server/Live-Server/Express[Koa/Hapi]/Budo[Bundler Browserify]/WebPackDevServer[Bundler WebPack]/BrowserSync[Bundler Browserify,WebPack,Gulp]..\buildScripts\srcServer.js & .\src\index.html To Serve Using Node Express & Open In Browser.Do npm install & Then Run node .\buildScripts\srcServer.js.Sharing Work-In-Progress Using:LocalTunnel[npm install localtunnel --global & Then Start App Like node .\buildScripts\srcServer.js & Then lt --port 3000]/Ngrok[AuthToken For Application]/Surge/Now.Install LocalTunnel Globally[npm install localtunnel --global].Then Execute As Desribed Before In 2  Separate Command Prompt.Provides Random Url:https://bright-dingo-67.localtunnel.me.To Run With SubDoamin Using lt --port 3000 --subdomain gandhiprajit.

Automation:Grunt[DiskFile Based TaskRunner]/Gulp[InMemory TaskRunner]/Npm Scripts[Scripts Section In Package.json].Modify Scripts Section In Package.json With "start": "node ./buildScripts/srcServer.js" & Run npm install & Then npm run start/npm start.Npm Scripts Have Pre/Post Hooks[Just Like prestart & poststart In Scripts Section].Adding Security Check In Scripts["security-check" : "nsp check"].All Script In .\node_modules\bin Directory Are In Path.Add "share":"lt --port 3000 --subdomain gandhiprajit" In Scripts Section To Run LocalTunnel Under SubDomain.Do npm run security-check.

To Run In Parallel Use npm-run-all --parallel [Task Definitions].We Have Added "open:src":"node ./buildScripts/srcServer.js" & Defined Our Parallel Task In "start": "npm-run-all --parallel security-check open:src".Do npm start/npm start --silent To Remove Noisy Logs.Now Change "share":"lt --port 3000 --subdomain gandhiprajit" To 
"localtunnel":"lt --port 3000 --subdomain gandhiprajit" & Create Separate Script "share":"npm-run-all --parallel open:src localtunnel".Do npm run share/npm run share --silent.If You Are Getting npm update Check Failed Message,Remove .config Directory From Users/CurrentLoggedInUser.

Transpiler[Transform+Compiler]:Babel,TypeScript,Elm.Babel Use .babelrc[Save In Root Of Project,Not Npm Specific]/Package.json.Babel Implements All Experimental 
Presets[Stage:0:Idea,Stage:1:Proposal,Stage:2:Draft,Stage:3:Candidate Specification,Stage:4:Finished Specification].Create .babelrcIn Root Of The Project.Change
var chalk  = require('chalk'); To import chalk from 'chalk';To Transpile Change "prestart": "node ./buildScripts/preStartMessage.js" To "prestart": "babel-node 
./buildScripts/preStartMessage.js" In Scripts Section Of Package.json.Do npm install & npm start --silent.Similarly Make Changes In .\buildScripts\srcServer.js 
& "open:src":"babel-node ./buildScripts/srcServer.js".

Bundling:Npm Package Use CommonJs Pattern.Improve Node Perormance.Module Format:[Immediately Invoked Function Expression[(function(){})()],Asynchronous Module Definition[]RequireJs:define(['ModuleName',function(Module){}]);,CommonJs[var Module = require('ModuleName'),Node Used],Universal Module Definition[Amd+Cjs],Es6 Modules[import Module from 'ModuleName']].Tree-Shaking Feature In Es6 Module[Dead Code Elimination].Bundler Package Js File For Target Environment[Browser/Node].
RequireJs[Amd Module]/Browserify[Cjs]/WebPack[Tree-Shaking]/RollUp[Tree-Shaking]/JavaScriptPackageManager[Jspm,Umd,SystemJs].WebPack Is Configured Using webpack.config.dev.js File.Add import webpack from 'webpack';import config from '../webpack.config.dev'; In ./buildScripts/srcServer.js, Also Make Some Code Changes.Our Entry Point Is Defined In webpack.config.dev.js As entry.path.Add Output File In index.html As <script src="bundle.js"></script>,This  Js Will Be Available In Src Directory[Logically] As Mentioned By output.path.Do npm install & npm start.Similarly We Can import Css File  & Bundle Together[Created index.css File & Import It In index.js As import './index.css';/**Importing Css*/].SourceMap Map Bundled,Transpiled,Minified Code To Original Source.Source Map Will Be Only Downloaded If We Open The Developer Tools.debugger;/**Use Debug BreakPoint */.

Linting:Enforces Consistency/Avoid Mistakes.JsLint/JsHint/EsLint/TsLint.EsLint[Config Format/BuiltIn Rules/Warning,Errors/PlugIn To Use/Use Preset]..eslintrc File In Project Root Or In Package.json[eslintConfig Section].[Use Preset & Tweak It StandardJs/AirBnb].EsLint Does Not Watch Files[Use  EsLint-Loader[With WebPack]/ EsLint-Watch[Npm Package Without Tied With Any Bundler].For Experimental Feature Use Babel-EsLint.[i Means Warning,2 Means Error,0 Means Off In Rule Section EsLint].
Add Script "lint": "esw webpack.config.* src buildScripts --color" For EsLint-Watch.Do npm run lint.Add "lint:watch": "npm run lint -- --watch" In Script,--watch Is Passed To lint Script Mentioned Above.Also Change "start": "npm-run-all --parallel security-check open:src lint:watch" To Accomodate Linting While File Changes[Watch].
Do npm start --silent To Check Lint Working.

Testing:UnitTesting/IntegrationTest/UiTest.FrameWork[Mocha/Jasmine/Tape/Qunit/Ava/Jest]/Assertion Library[Chai/Should.js/Expect Npm Package]/Helper Library[JsDom/ Cheerio]/Where To Run Test[BrowserBased[Karma/Testem]/Headless Browser[PhantomJs]/InMemoryDom[JsDom]]/Where To Place Test[In A Specific Directory/AlongSide Source Code, Name Test File With .spec Or .test]/When To Run Test[File Save].Create A .\buildScripts\testSetup.js For Mocha Giving Hint To Babel For Transpiling.Multiple Reporter 
Can Be Used With Mocha.Add test": "mocha --reporter progress buildScripts/testSetup.js \"src/**/*.test.js\"" in Script Section.It Will Run buildScripts/testSetup.js First,Then Run Other Files  Ending With .test.js In sr Directory/Sub-Directory.FrameWork[Mocha]/Assertion Library[Chai]/Helper Library[JsDom]/Where To Run Test[Node]/Where To Place Test[AlongSide Source Code, Name Test File With .spec Or .test]/When To Run Test[File Save].When To Run Test[File Save]:Add New Script "test:watch": "npm run test -- --watch" & Append It To start Script "start": "npm-run-all --parallel security-check open:src lint:watch test:watch".Now Run npm start --silent.

Continuous Integration Server:Travis/Appveyor/Jenkins/CircleCi/Semaphore/SnapCi.For Travis Use .travis.yml File[Check Your Node Version Using node --version].Goto https://travis-ci.org/ With Github AuthFederation.Copy This 06.TestingIntegration Project To Github Repository As A Separate Repository.I Have Created TravisCiNodeDemo2018 Repo With Add ReadMe.md & Add Mit License[https://github.com/SageGandhi/TravisCiNodeDemo2018.git].Do Git Init.Perform git add . & Then
git commit -m "TravisCi TryOut".Do git remote add origin https://github.com/SageGandhi/TravisCiNodeDemo2018.git & Do git remote --verbose.Do git push --force origin master.Remove If Found A Potential Security Vulnerability In One Of Your Dependencies.Make Changes In Any Of The File[Do index.html Content So That Test Failed].
Signup For https://ci.appveyor.com/signup.Use Free Plan With Github AuthFederation.Add Your Project In Appveyor.Add appveyor.yml In Root Of This Project & Checked In.
Change Previous index.html As Well.It Will Automatically Start The Integration.