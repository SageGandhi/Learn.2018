<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd">
	<http auto-config="true">
		<intercept-url pattern="/**" access="ROLE_USER"></intercept-url>
		<http-basic></http-basic><!-- Basic Authentication -->
		<!-- Order Does Matter,WildCard Must Be The Last intercept-url-->
		<intercept-url pattern="/login.html" access="IS_AUTHENTICATED_ANONYMOUSLY"></intercept-url>
		<intercept-url pattern="/loginFailed.html" access="IS_AUTHENTICATED_ANONYMOUSLY"></intercept-url>
		<intercept-url pattern="/logout.html" access="IS_AUTHENTICATED_ANONYMOUSLY"></intercept-url>
		<intercept-url pattern="/403.html" access="IS_AUTHENTICATED_ANONYMOUSLY"></intercept-url>
		<intercept-url pattern="/**" access="ROLE_USER"></intercept-url>
		<form-login login-page="/login.html" authentication-failure-url="/loginFailed.html"></form-login><!-- Routed Via  Spring Mvc -->
		<logout logout-success-url="/logout.html"></logout>
		<access-denied-handler error-page="/403.html"></access-denied-handler>
	</http>
	<!-- CREATE TABLE `Users` (`UserName` varchar(50) NOT NULL,`Password` varchar(50) 
		NOT NULL,`Enabled` tinyint(1) NOT NULL,PRIMARY KEY (`UserName`));CREATE TABLE 
		`Authorities` (`UserName` varchar(50) NOT NULL,`Authority` varchar(50) NOT 
		NULL,UNIQUE KEY `Ix_Auth_UserName` (`username`,`authority`),CONSTRAINT `Fk_Authorities_Users` 
		FOREIGN KEY (`UserName`) REFERENCES `Users` (`UserName`));INSERT INTO `users` 
		VALUES ('Prajit','Gandhi',1),('Gandhi','Prajit',1); INSERT INTO `authorities` 
		VALUES ('Prajit','ROLE_USER'),('Gandhi','ROLE_USER'); -->
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="Prajit" password="Gandhi" authorities="ROLE_USER"></user>
			</user-service>
			<jdbc-user-service data-source-ref="dataSource"></jdbc-user-service>
		</authentication-provider>
	</authentication-manager>
	<authentication-manager>
		<authentication-provider
			user-service-ref="userJdbcDaoImpl">
			<password-encoder hash="bcrypt"></password-encoder>
		</authentication-provider>
	</authentication-manager>
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"></jdbc-user-service>
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="com.mysql.jdbc.Driver"></beans:property>
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/fitnesstracker"></beans:property>
		<beans:property name="username" value="Prajit"></beans:property>
		<beans:property name="password" value="Prajit"></beans:property>
	</beans:bean>
	<beans:bean id="userJdbcDaoImpl"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl"
		p:dataSource-ref="dataSource"></beans:bean>
</beans:beans>